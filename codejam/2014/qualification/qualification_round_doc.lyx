#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{indentfirst}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language american
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_author "Szabó Lóránt"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 1.5cm
\rightmargin 2cm
\bottommargin 1.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language swedish
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Google Code Jam 2014
\end_layout

\begin_layout Author
-- Qualification Round --
\end_layout

\begin_layout Section
Cookie Clicker
\end_layout

\begin_layout Standard
Translating the problem into mathematical language we have to minimize the
 following formula with respect to 
\begin_inset Formula $k\in\mathbb{N}$
\end_inset

:
\begin_inset Formula 
\[
t(k)=C\sum_{i=0}^{k-1}\frac{1}{2+i\, F}+\frac{X}{2+k\, F}
\]

\end_inset

Note the difference of two consecutive element:
\begin_inset Formula 
\[
\Delta t(k)=t(k+1)-t(k)=C\left(\sum_{i=0}^{k}\frac{1}{2+i\, F}-\sum_{i=0}^{k-1}\frac{1}{2+i\, F}\right)+X\left(\frac{1}{2+(k+1)\, F}-\frac{1}{2+k\, F}\right)
\]

\end_inset


\begin_inset Formula 
\[
\Delta t(k)=\frac{C}{2+k\, F}+\frac{X}{2+(k+1)\, F}-\frac{X}{2+k\, F}
\]

\end_inset

Conjecture: 
\begin_inset Formula $t(k)$
\end_inset

 sequence is a strictly monotonic decreasing sequence for some finite integer
 
\begin_inset Formula $K_{1}\geq0$
\end_inset

 and then it's a strictly monotonic increasing sequence which limit goes
 to infinity for 
\begin_inset Formula $k>K_{2}$
\end_inset

, so for at least one 
\begin_inset Formula $K$
\end_inset

 integer 
\begin_inset Formula $t(k)$
\end_inset

 is minimal.
\end_layout

\begin_layout Standard
Thus 
\begin_inset Formula $\Delta t(k<K_{1})<0$
\end_inset

 and 
\begin_inset Formula $\Delta t(k>K_{2})>0$
\end_inset

, so we want to solve 
\begin_inset Formula $\Delta t(k)=0$
\end_inset


\begin_inset Formula 
\[
k=\frac{x}{c}-\frac{2}{f}
\]

\end_inset

But this expression does not guarantee that 
\begin_inset Formula $k$
\end_inset

 is integer, so let's take 
\begin_inset Formula $k=\lfloor\frac{x}{c}-\frac{2}{f}\rfloor$
\end_inset

 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
I'm not sure why not rounding, but this do the job (anyway integer solution
 should be somewhere around the fraction value)
\end_layout

\end_inset

.
 With a given 
\begin_inset Formula $k$
\end_inset

 we can substitute to the first formula to get the result.
\end_layout

\begin_layout Section
Deceitful War
\end_layout

\begin_layout Standard
The problem mention that Ken follows an 
\emph on
optimal strategy
\emph default
.
 In this game the optimal strategy is to maximize the won point number.
 It is easy to show that trying to 
\begin_inset Quotes sld
\end_inset

beat
\begin_inset Quotes srd
\end_inset

 every Naomi's weight with the possible lightest weight and if he can't
 beat it, letting it go with his lightest weight can maximize his point
 -- if they both play War.
\end_layout

\begin_layout Subsection
War
\end_layout

\begin_layout Standard
According to the previous strategy anything what Naomi call will be tried
 to be beaten.
 Let's investigate what happens if Naomi calls in ascending order her weights:
\end_layout

\begin_layout Standard
When Ken have to use his heaviest weight he won't be able to defeat more
 weights, so the remaining number of weights would score for Naomi.
 In other order of calls Ken would use the same (if the lightest still available
) or heavier (if he used already the lightest) weights when beating Naomi's
 given weight.
 Reordering Naomi calls doesn't change (is used the lightest) the final
 score or decrease it (when not the lightest was used), but it will no way
 increase her score.
\end_layout

\begin_layout Standard
The steps of a very basic algorithm determining the final score in War.
 Basically it's call Naomi's weights in ascending order and check if Ken
 can beat it.
 The ones, which was used in a round become marked.
\end_layout

\begin_layout Enumerate
Sort both of the weight sequences and set unmarked all of the weights
\end_layout

\begin_layout Enumerate
\begin_inset Formula $i\leftarrow1$
\end_inset

; 
\begin_inset Formula $score\leftarrow\textrm{length of the sequence}$
\end_inset


\end_layout

\begin_layout Enumerate
Select Naomi's 
\begin_inset Formula $i$
\end_inset

th weight
\end_layout

\begin_layout Enumerate
\begin_inset Formula $j\leftarrow1$
\end_inset


\end_layout

\begin_layout Enumerate
Is Ken's 
\begin_inset Formula $j$
\end_inset

th weight is not marked and heavier than Naomi's 
\begin_inset Formula $i$
\end_inset

th weight?
\end_layout

\begin_deeper
\begin_layout Enumerate
Yes: mark Ken's 
\begin_inset Formula $j$
\end_inset

th weight and 
\begin_inset Formula $score\leftarrow score-1$
\end_inset

 and if 
\begin_inset Formula $i\leq n$
\end_inset

 go back to 3.
\end_layout

\begin_layout Enumerate
No: 
\begin_inset Formula $j\leftarrow j+1$
\end_inset

 and if 
\begin_inset Formula $j\leq n$
\end_inset

 go back to 5.
\end_layout

\end_deeper
\begin_layout Subsection
Deceitful War
\end_layout

\begin_layout Standard
Naomi knowing Ken's strategy, that he tries to beat every beatable weight
 with the possible lightest weight of his, can easily kick out Ken's heaviest
 weights with her lighter weight.
 Let's propose Ken has 
\begin_inset Formula $K_{h}$
\end_inset

 and Naomi has 
\begin_inset Formula $N_{l}<K_{h}$
\end_inset

 weight.
 Naomi can lie that her 
\begin_inset Formula $N_{l}$
\end_inset

 weight is 
\begin_inset Formula $K_{h}-\Delta$
\end_inset

 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Because of the discrete nature of the problem there will be always infinitely
 many 
\begin_inset Formula $\Delta$
\end_inset

 for which 
\begin_inset Formula $K_{h}-\Delta$
\end_inset

 only beatable with 
\begin_inset Formula $K_{h}$
\end_inset


\end_layout

\end_inset

.
 So Ken would use his 
\begin_inset Formula $K_{h}$
\end_inset

 weight to beat Naomi's 
\begin_inset Formula $N_{l}$
\end_inset

.
 When Naomi wants to score with 
\begin_inset Formula $N_{h}$
\end_inset

 she must lie her weight to be the heaviest in the game (e.g.
 
\begin_inset Formula $\textrm{heaviest}+\Delta$
\end_inset

), so Ken would call his lightest one 
\begin_inset Formula $K_{l}$
\end_inset

.
 It's optimal for Naomi when she use his lightest weight to beat Ken's heaviest
 weight which doesn't exceed her weight.
 
\end_layout

\begin_layout Standard
Let's investigate what if Naomi call weights in ascending order.
 She must consider in every round that is there any weight which can be
 beaten with her currently selected weight.
 If there's one lie it as the heaviest weight of the current round
\begin_inset Formula $+\Delta$
\end_inset

; if there's not lie it as Ken's heaviest weight
\begin_inset Formula $-\Delta$
\end_inset

.
\end_layout

\begin_layout Standard
A basic algorithm determining the final score in Deceitful War:
\end_layout

\begin_layout Enumerate
Sort both of the weight sequences and set unmarked all of the weights
\end_layout

\begin_layout Enumerate
\begin_inset Formula $i\leftarrow1$
\end_inset

; 
\begin_inset Formula $score\leftarrow0$
\end_inset


\end_layout

\begin_layout Enumerate
Select Naomi's 
\begin_inset Formula $i$
\end_inset

th weight
\end_layout

\begin_layout Enumerate
\begin_inset Formula $j\leftarrow1$
\end_inset


\end_layout

\begin_layout Enumerate
Is Ken's 
\begin_inset Formula $j$
\end_inset

th weight is not marked and lighter than Naomi's 
\begin_inset Formula $i$
\end_inset

th weight?
\end_layout

\begin_deeper
\begin_layout Enumerate
Yes: mark Ken's 
\begin_inset Formula $j$
\end_inset

th weight and 
\begin_inset Formula $score\leftarrow score+1$
\end_inset

 and if 
\begin_inset Formula $i\leq n$
\end_inset

 go back to 3.
\end_layout

\begin_layout Enumerate
No: 
\begin_inset Formula $j\leftarrow j+1$
\end_inset

 and if 
\begin_inset Formula $j\leq n$
\end_inset

 go back to 5.
\end_layout

\end_deeper
\begin_layout Subsection
Generally about War and Deceitful War (without proof)
\end_layout

\begin_layout Standard
Let's denote 
\begin_inset Formula $U$
\end_inset

 Naomi's weight set and 
\begin_inset Formula $V$
\end_inset

 Ken's weight set.
 Create 
\begin_inset Formula $G$
\end_inset

 bipartite graph with these 
\begin_inset Formula $U,V$
\end_inset

 sets as vertex sets and connect with edge 
\begin_inset Formula $n\in U$
\end_inset

 and 
\begin_inset Formula $k\in V$
\end_inset

 according to a game specific rules.
 The score will be the maximum bipartite matching of 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\begin_layout Subsubsection
War
\end_layout

\begin_layout Standard
The rule: connect with edge 
\begin_inset Formula $n\in U$
\end_inset

 and 
\begin_inset Formula $k\in V$
\end_inset

 if 
\begin_inset Formula $n<k$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Deceitful War
\end_layout

\begin_layout Standard
The rule: connect with edge 
\begin_inset Formula $n\in U$
\end_inset

 and 
\begin_inset Formula $k\in V$
\end_inset

 if 
\begin_inset Formula $n>k$
\end_inset

.
\end_layout

\end_body
\end_document
